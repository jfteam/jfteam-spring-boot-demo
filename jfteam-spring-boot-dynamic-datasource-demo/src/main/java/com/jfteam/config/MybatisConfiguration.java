package com.jfteam.config;import com.jfteam.framework.datasource.DynamicDataSource;import com.jfteam.framework.page.PageInterceptor;import org.apache.ibatis.plugin.Interceptor;import org.apache.ibatis.session.SqlSessionFactory;import org.mybatis.spring.SqlSessionFactoryBean;import org.mybatis.spring.annotation.MapperScan;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.util.CollectionUtils;import javax.sql.DataSource;import java.util.ArrayList;import java.util.Collections;import java.util.List;/** * Created with IntelliJ IDEA. * Description: * User: fengwenping * Date: 2017-10-29 * Time: 下午7:13 */@Configuration@MapperScan(basePackages = {"com.jfteam.dao"})public class MybatisConfiguration {    @Bean    public SqlSessionFactory sqlSessionFactory(@Qualifier("dataSource") DataSource dataSource,                                               List<Interceptor> interceptors) throws Exception {        SqlSessionFactoryBean sessionFactoryBean = new SqlSessionFactoryBean();        sessionFactoryBean.setDataSource(dataSource);        if (interceptors != null && interceptors.size() > 0) {            Interceptor[] plugins = new Interceptor[interceptors.size()];            interceptors.toArray(plugins);            sessionFactoryBean.setPlugins(plugins);        }        return sessionFactoryBean.getObject();    }    @Bean    public List<Interceptor> interceptors() {        List<Interceptor> interceptors = new ArrayList<>();        interceptors.add(new PageInterceptor());        return interceptors;    }}